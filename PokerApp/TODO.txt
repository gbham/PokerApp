


-care with the difference between the hand ending due to someone folding and due to the hand ending cause someone is all in. I might treat some variables in too much of a general way
-Need to account for someone being all in on the river and winning, but they cant get all the chips since they were short stack, I then need to assign those chips to the 2nd best hand and I suppose even one more time in a very rare scenario, I might be able to loop whatever process I create until the pot is "cleared"
-ensure I have functions in the correct class, there can be some ambiguity with some functions that could belong to both Dealer/Board and maybe player. Keep these in mind and try find ways to seperate the functions into clearer categories 
-if i really want to show this - "Console.WriteLine($"[{this.Name}] has placed a bet of [{value}] chips.");" then I could just do another Console.ReadKey() after it so the user needs to hit a key before the next player will be presented with their move options
-phases, stage, round, not sure what I like best, dont mix and match as it will just lead to unnecessary confussion
-When a player tries to fold when they can check, have a little message saying "are you sure you want to fold?". p sure all i need to do is check if any players have bet this round
-the player class is a bit of a shit show, need to better sort/seperate the functions within there
-I do a lot of similiar stuff with "potentialWinners" for both hand type and kicker, could probably extract some of this functionality into common functions
-still a bit to do for the fullhouse function but no work on kickers at all.
-care with properties like BestThreeOfAKind and so on. I havent run into any problems as of yet but I guess there could be scenarios where I am not resetting all these variables properly and the previous hand data might persist to the next
-maybe look to combine the Board/Deck class if possible, both dont have very much within. More important problem is sorting the player class
-keep in mind when detmerning split pot from kickers that only 5 cards can be used. If the situation is handled where illegal cards are being used in the comparison, for example, if two players share the same pair and the same 3 next highest cards then it doesnt matter what the remaining 2 cards are, it should be a split pot in that situation. So have to ensure that the final 2 cards are not compared in that situation. 
-need to handle the situation where a user has inputted 2 move options (like check and bet, or call and raise in the same move, not sure what would actually happen in this scenario).
-Split pot feature is basic. It doesnt determine if one player should get a bigger proportion of the winnings, at the moment it just splits the pot equally.
-Maybe worth making the distinction or highlight the use of the word "Kickers", or "player.ListOfKickers". For a pair, this property refers to the 3 next highest cards outside the pair. For a Flush, this property refers to the 5 highest value cards of the matched suit. 
-The StraightFound() function is throwing a strange error, investigate

Desired Features:
-Make function to remove excess kickers
-Only Show cards of the winner
-Muck or show hands									(thought it might be hard at first but really the only condtion I care about when it comes down to whether to provide the player the option to much or show is when all other players fold, otherwise there is no option whether to show or fold)
-Dealer chip or some other indication of who is SB & BB
-Min raises
-User input format/help menu with example input
-Tab autocomplete user options/rotate through them
-Add chips
-Highlight when showing the winner if the hand, what cards were used to create the best hand from the 7 availiable
-Options menu to set the blinds, and more